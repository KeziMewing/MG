local player = game.Players.LocalPlayer
local starterGui = game:GetService("StarterGui")
local exploitLogGui = player:WaitForChild("PlayerGui"):WaitForChild("ExploitLog")

-- Function to handle visibility changes
local function onExploitLogVisibilityChanged()
    if exploitLogGui.Enabled then
        print("ExploitLog GUI is now visible.")
    else
        print("ExploitLog GUI is now hidden.")
    end
end

-- Function to handle button clicks (assuming there are buttons in the GUI)
local function onButtonClicked(buttonName)
    print(buttonName .. " button clicked.")
    -- You can add more functionality based on the button clicked
end

-- Listen for visibility changes (e.g., toggling the GUI)
exploitLogGui:GetPropertyChangedSignal("Enabled"):Connect(onExploitLogVisibilityChanged)

-- Example: Assuming there are buttons in the ExploitLog GUI
local button = exploitLogGui:FindFirstChild("YourButtonName") -- Replace with the actual button name
if button then
    button.MouseButton1Click:Connect(function()
        onButtonClicked(button.Name)
    end)
end

-- Additional setup for other buttons can be done similarly
